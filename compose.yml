version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-postgres}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: alpine/ollama:latest
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/var/lib/ollama
    environment:
      OLLAMA_MODEL: ${OLLAMA_MODEL}
    entrypoint: /bin/sh
    command: -c "ollama serve & sleep 5 && ollama pull ${OLLAMA_MODEL} && wait"

  frontend:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
      OAUTH_GOOGLE_CLIENT_ID: ${OAUTH_GOOGLE_CLIENT_ID}
      OAUTH_GOOGLE_CLIENT_SECRET: ${OAUTH_GOOGLE_CLIENT_SECRET}
      OAUTH_GOOGLE_REDIRECT_URI: ${OAUTH_GOOGLE_REDIRECT_URI}
      CHAINLIT_AUTH_SECRET: ${CHAINLIT_AUTH_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "
        echo 'Waiting for DB to be ready...' &&
        npx prisma migrate deploy &&
        echo 'Starting Chainlit...' &&
        uv run chainlit run frontend/main.py --host 0.0.0.0 --port 8000
      "

volumes:
  postgres_data:
  ollama_data:
